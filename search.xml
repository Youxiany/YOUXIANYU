<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Csharp字符串遍历编程题二学习笔记</title>
      <link href="/2024/12/03/csharp%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%81%8D%E5%8E%86%E7%BC%96%E7%A8%8B%E9%A2%982/"/>
      <url>/2024/12/03/csharp%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%81%8D%E5%8E%86%E7%BC%96%E7%A8%8B%E9%A2%982/</url>
      
        <content type="html"><![CDATA[<h1 id="Csharp编程题判断合法标识符。"><a href="#Csharp编程题判断合法标识符。" class="headerlink" title="Csharp编程题判断合法标识符。"></a>Csharp编程题判断合法标识符。</h1><p>1.输入一个字符串，判断其是否是c#的合法标识符。<br>2.分析：</p><blockquote><p>判断字符串是否不是是数字、字母（大小写）、下划线。<br>判断是否是数字开头（数字开头不是合法标识符）</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> str=Console.ReadLine();</span><br><span class="line">    <span class="built_in">bool</span> isRight = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; str.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((str[i] &lt; <span class="string">&#x27;0&#x27;</span> || str[i]&gt;<span class="string">&#x27;9&#x27;</span>)&amp;&amp;(str[i] &lt; <span class="string">&#x27;a&#x27;</span> || str[i]&gt;<span class="string">&#x27;z&#x27;</span>)&amp;&amp; (str[i] &lt; <span class="string">&#x27;A&#x27;</span> || str[i] &gt; <span class="string">&#x27;Z&#x27;</span>) &amp;&amp; (str[i] != <span class="string">&#x27;_&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            isRight = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (str[<span class="number">0</span>]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;str[<span class="number">0</span>]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isRight=<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isRight)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;是合法字符&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;不是合法字符&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SHFKHFRjgjidgj12</span><br><span class="line">是合法字符</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>JHSJFjlfjsd</span><br><span class="line">不是合法字符</span><br></pre></td></tr></table></figure><h1 id="Csharp编程题-回文串。"><a href="#Csharp编程题-回文串。" class="headerlink" title="Csharp编程题-回文串。"></a>Csharp编程题-回文串。</h1><p>1.“回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。请写一个程序判断读入的字符串是否是“回文”。<br>2.分析：</p><blockquote><p>如果字符串是偶数的话，假如8&#x2F;2&#x3D;4，遍历0-3。如果是奇数的话，7&#x2F;2&#x3D;3，遍历0-2<br>假设字符串是8，那么索引对应的是0-7、1-6、2-5···，i对应的倒数length-1-i。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> str = Console.ReadLine();</span><br><span class="line">    <span class="built_in">bool</span> ha = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; str.Length / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] != str[str.Length - <span class="number">1</span> - i])</span><br><span class="line">        &#123;</span><br><span class="line">            ha = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ha)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;是回文串&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;不是回文串&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p> 3.输出结果：<br> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> level</span><br><span class="line">是回文串</span><br></pre></td></tr></table></figure></p><h1 id="Csharp编程题-查找最长连续次数"><a href="#Csharp编程题-查找最长连续次数" class="headerlink" title="Csharp编程题-查找最长连续次数"></a>Csharp编程题-查找最长连续次数</h1><p>1.收集了连续N（1&lt;N&lt;10000000)天的最高气温数据。现在他想知道气温一直上升的最长连续天数。<br>样例输入：1 3 5 | 2 3 5 7 8 | 6 9<br>样例输出：5<br>2.分析：</p><blockquote><p>判断前面的数字是否比后面小<br>如果后面的连续最高天数比后面的连续天数高则更新一下。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> str=Console.ReadLine();</span><br><span class="line">    <span class="built_in">string</span>[] strArray = str.Split(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    <span class="built_in">int</span>[] ints= <span class="keyword">new</span> <span class="built_in">int</span>[strArray.Length];</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; ints.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> number=Convert.ToInt32(strArray[i]);</span><br><span class="line">        ints[i]=number;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> maxDays = <span class="number">0</span>;<span class="comment">//记录最高气温连续升高的天数</span></span><br><span class="line">    <span class="built_in">int</span> count = <span class="number">1</span>;<span class="comment">//记录气温连续升高的天数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>;i &lt; ints.Length<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ints[i] &lt; ints[i + <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (count &gt; maxDays)</span><br><span class="line">            &#123;</span><br><span class="line">                maxDays = count;</span><br><span class="line">            &#125;</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count &gt; maxDays)</span><br><span class="line">        &#123;</span><br><span class="line">            maxDays = count;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;最高气温连续升高的最长天数&quot;</span> + maxDays);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp字符串遍历编程题学习笔记</title>
      <link href="/2024/12/01/csharp%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%81%8D%E5%8E%86%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
      <url>/2024/12/01/csharp%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%81%8D%E5%8E%86%E7%BC%96%E7%A8%8B%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Csharp字符串遍历编程题学习笔记"><a href="#Csharp字符串遍历编程题学习笔记" class="headerlink" title="Csharp字符串遍历编程题学习笔记"></a>Csharp字符串遍历编程题学习笔记</h1><p>1.输入n(n&lt;100)个数，找出其中最小的数，将它与最前面的数交换后输出这些数。</p><p>2.分析：</p><blockquote><p>1.先获取字符串（string str&#x3D;Console.ReadLine()）<br>2.字符串数组通过空格进行输入，使用string[] strArray&#x3D;str.Split(‘ ‘);<br>3.字符串转换整型,声明int[] intArray&#x3D;new int[strArray.Length];使用for循环转换赋值。<br>4.假设（索引）0最小int min&#x3D;intArray[0];那最小值和后面的索引进行比较，int一个变量进行存储最小值。<br>5.找到最小值和假设的进行位置交换，int一个临时变量进行存储（索引0），在把最小值放在（索引0）里面，然后再将临时变量放在最小值里面。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> str=Console.ReadLine();</span><br><span class="line">    <span class="built_in">string</span>[] strArray = str.Split(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    <span class="built_in">int</span>[] intArray= <span class="keyword">new</span> <span class="built_in">int</span>[strArray.Length];</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; strArray.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> number=Convert.ToInt32(strArray[i]);</span><br><span class="line">        intArray[i] = number; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> min = intArray[<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">int</span> minIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; intArray.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (intArray[i] &lt; min)</span><br><span class="line">        &#123;</span><br><span class="line">            min = intArray[i];</span><br><span class="line">            minIndex = i;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> temp=intArray[<span class="number">0</span>];</span><br><span class="line">    intArray[<span class="number">0</span>] = intArray[minIndex];</span><br><span class="line">    intArray[minIndex] = temp;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="built_in">int</span> t <span class="keyword">in</span> intArray)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(t+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">4</span> <span class="number">1</span> <span class="number">54</span> <span class="number">56</span> <span class="number">32</span> <span class="number">42</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">3</span> <span class="number">54</span> <span class="number">56</span> <span class="number">32</span> <span class="number">42</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="排序-系统方法"><a href="#排序-系统方法" class="headerlink" title="排序-系统方法"></a>排序-系统方法</h2><p>1.编写一个控制台程序，要求用户输入一组数字空格间隔，，对用户输入的数字从小到大输出。</p><p>2.分析：</p><blockquote><p>可以用系统方法做出来（Array.Sort）</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> str=Console.ReadLine();</span><br><span class="line">    <span class="built_in">string</span>[] strArray = str.Split(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    <span class="built_in">int</span>[] intArray= <span class="keyword">new</span> <span class="built_in">int</span>[strArray.Length];</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; intArray.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> number=Convert.ToInt32(strArray[i]);</span><br><span class="line">        intArray[i]=number;</span><br><span class="line">    &#125;</span><br><span class="line">    Array.Sort(intArray);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="built_in">int</span> i <span class="keyword">in</span> intArray)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">3</span> <span class="number">6</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp编程题学习笔记</title>
      <link href="/2024/11/30/csharp%E7%BC%96%E7%A8%8B%E9%A2%983/"/>
      <url>/2024/11/30/csharp%E7%BC%96%E7%A8%8B%E9%A2%983/</url>
      
        <content type="html"><![CDATA[<h1 id="Csharp编程题学习笔记"><a href="#Csharp编程题学习笔记" class="headerlink" title="Csharp编程题学习笔记"></a>Csharp编程题学习笔记</h1><h2 id="1-c-三个可乐可以换一瓶可乐，现再有364瓶可乐，问一共可以和多少瓶可乐，剩下几个空瓶"><a href="#1-c-三个可乐可以换一瓶可乐，现再有364瓶可乐，问一共可以和多少瓶可乐，剩下几个空瓶" class="headerlink" title="1.c#三个可乐可以换一瓶可乐，现再有364瓶可乐，问一共可以和多少瓶可乐，剩下几个空瓶"></a>1.c#三个可乐可以换一瓶可乐，现再有364瓶可乐，问一共可以和多少瓶可乐，剩下几个空瓶</h2><p>2.分析：</p><blockquote><p>1.这个问题可以通过循环来解决，每次循环计算出可以换到的可乐瓶数和剩下的空瓶数，直到剩下的空瓶数不足以换到一瓶可乐为止。<br>2.首先，我们有364瓶可乐，每3个空瓶可以换1瓶可乐。我们可以通过以下步骤来计算：<br>•以换到的可乐瓶数：364除以3，得到121瓶可乐，余数为1个空瓶。<br>•在我们有121瓶可乐和1个空瓶，总共122个空瓶。<br>•次计算可以换到的可乐瓶数：122除以3，得到40瓶可乐，余数为2个空瓶。<br>•在我们有40瓶可乐和2个空瓶，总共42个空瓶。<br>•再次计算可以换到的可乐瓶数：42除以3，得到14瓶可乐，余数为0个空瓶。<br>•现在我们有14瓶可乐和0个空瓶，总共14个空瓶。<br>•再次计算可以换到的可乐瓶数：14除以3，得到4瓶可乐，余数为2个空瓶。<br>•现在我们有4瓶可乐和2个空瓶，总共6个空瓶。<br>•再次计算可以换到的可乐瓶数：6除以3，得到2瓶可乐，余数为0个空瓶。<br>•现在我们有2瓶可乐和0个空瓶，总共2个空瓶。<br>•再次计算可以换到的可乐瓶数：2除以3，得到0瓶可乐，余数为2个空瓶。<br>•所以，总共可以换到的可乐瓶数为：121 + 40 + 14 + 4 + 2 &#x3D; 181瓶，最后剩下2个空瓶。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> pingNumber = <span class="number">364</span>;</span><br><span class="line">    <span class="built_in">int</span> heNumber = <span class="number">364</span>;</span><br><span class="line">    <span class="keyword">while</span> (pingNumber &gt; <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        heNumber += pingNumber / <span class="number">3</span>;</span><br><span class="line">        pingNumber = (pingNumber / <span class="number">3</span>) + (pingNumber % <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;一共可以喝&quot;</span>+heNumber+<span class="string">&quot;,剩下&quot;</span>+pingNumber);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一共可以喝<span class="number">545</span>,剩下<span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="编写一个应用程序来输入的字符串进行加密，对于字母字符串加密规则如下："><a href="#编写一个应用程序来输入的字符串进行加密，对于字母字符串加密规则如下：" class="headerlink" title="编写一个应用程序来输入的字符串进行加密，对于字母字符串加密规则如下："></a>编写一个应用程序来输入的字符串进行加密，对于字母字符串加密规则如下：</h2><p>‘a’→’d’,’x’→’a’,’A’→’D’,’X’→’A’,<br>1.分析：</p><blockquote><p>字符是循环+3。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> str=Console.ReadLine();</span><br><span class="line">    <span class="built_in">char</span>[] strArray= str.ToCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; strArray.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((strArray[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; strArray[i] &lt;= <span class="string">&#x27;z&#x27;</span>) || (strArray[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; strArray[i] &lt;= <span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            strArray[i] = (<span class="built_in">char</span>)(strArray[i] + <span class="number">3</span>);<span class="comment">//&#x27;a&#x27;+3 97+3=100=&#x27;d&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> (strArray[<span class="number">1</span>] &gt; <span class="string">&#x27;z&#x27;</span> &amp;&amp; strArray[i] &lt;= <span class="string">&#x27;z&#x27;</span> + <span class="number">3</span>)<span class="comment">//zyx</span></span><br><span class="line">            &#123;</span><br><span class="line">                strArray[i] = (<span class="built_in">char</span>)(strArray[i] - <span class="number">26</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (strArray[i] &gt; <span class="string">&#x27;Z&#x27;</span> &amp;&amp; strArray[i] &lt;= <span class="string">&#x27;Z&#x27;</span> + <span class="number">3</span>)<span class="comment">//XYZ</span></span><br><span class="line">            &#123;</span><br><span class="line">                strArray[i]= (<span class="built_in">char</span>)(strArray[i] - <span class="number">26</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">char</span> temp <span class="keyword">in</span> strArray)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(temp+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp什么是数组，数组的遍历笔记</title>
      <link href="/2024/11/29/csharp%E6%95%B0%E7%BB%84/"/>
      <url>/2024/11/29/csharp%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是数组"><a href="#什么是数组" class="headerlink" title="什么是数组"></a>什么是数组</h1><p>1.数组是一种常用的数据结构，用于存储同一类型的多个值。在编程中，数组可以被看作是一个容器，其中包含了固定数量的元素，这些元素通常是相同类型的数据。以下是数组的一些基本特性：</p><blockquote><p>1.元素类型一致：数组中的所有元素都是同一数据类型的，比如整数、浮点数、字符等。<br>2.连续存储：数组的元素在内存中是连续存放的，这意味着它们拥有连续的内存地址。<br>3.索引访问：可以通过索引（通常是从0开始的整数）来访问数组中的元素。例如，如果有一个名为arr的数组，那么可以通过arr[0]来访问第一个元素，arr[1]来访问第二个元素，以此类推。<br>4.固定大小：在某些编程语言中，数组的大小是固定的，一旦声明，其长度就不能改变。而在其他语言中，如Python的列表，数组的大小是动态的，可以根据需要增长和缩小。<br>5.遍历：可以遍历数组中的所有元素，通常使用循环结构（如for循环）来实现。<br>6.操作：数组支持多种操作，如查找、插入、删除、排序等。</p></blockquote><h2 id="数组的声明"><a href="#数组的声明" class="headerlink" title="数组的声明"></a>数组的声明</h2><blockquote><p>类型[] 数组名；<br>数组名遵守变量命名规则</p></blockquote><h2 id="数组的赋值"><a href="#数组的赋值" class="headerlink" title="数组的赋值"></a>数组的赋值</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[] ages=&#123;<span class="number">46</span>,<span class="number">45</span>,<span class="number">3</span>,<span class="number">53</span>,<span class="number">5</span>,<span class="number">2</span>&#125;</span><br><span class="line">ages=<span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">10</span>]；</span><br><span class="line">ages=<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">76</span>,<span class="number">8</span>&#125;</span><br><span class="line">ages=<span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">6</span>]&#123;<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">42</span>,<span class="number">6</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="数组的使用（修改和读取）"><a href="#数组的使用（修改和读取）" class="headerlink" title="数组的使用（修改和读取）"></a>数组的使用（修改和读取）</h2><p>通过索引（下标），索引从0开始。<br>可以把数组想象成一个火车，一个车厢里面存储的就是数据元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//声明int类型的数据</span><br><span class="line">       int[] ages=&#123;46,45,3,53,5,2&#125;</span><br><span class="line">//数组的数据有下标   0  1  2 3  4 5</span><br><span class="line">//数组名[索引]</span><br><span class="line">age[index]</span><br></pre></td></tr></table></figure><blockquote><p>注意：不能访问索引不存在的值</p></blockquote><h1 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h1><blockquote><p>1.声明一个int的数组，数组大小为9<br>2.声明一个char的数组，数组长度为20<br>3.声明一个float数组，数组长度为5<br>4.声明一个字符串数组，数组长度为8</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[] inta = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">9</span>];</span><br><span class="line"><span class="built_in">char</span>[] chara=<span class="keyword">new</span> <span class="built_in">char</span>[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">float</span>[] floata = <span class="keyword">new</span> <span class="built_in">float</span>[<span class="number">5</span>];</span><br><span class="line"><span class="built_in">string</span>[] stringa = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">8</span>];</span><br></pre></td></tr></table></figure><h1 id="这么遍历一个数组？（正序和倒序）"><a href="#这么遍历一个数组？（正序和倒序）" class="headerlink" title="这么遍历一个数组？（正序和倒序）"></a>这么遍历一个数组？（正序和倒序）</h1><blockquote><p>遍历就是取得数组中的每一个值<br> 遍历索引-通过索引访问元素</p></blockquote><p> 1.通过for和while遍历一个数组<br> 2.通过foreach遍历一个数组</p><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> int[] ages = &#123; 23, 45, 67, 12, 34, 56, 8, 34, 23, 3 &#125;;</span><br><span class="line">for(int i = 0; i &lt; 10; i++)</span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(ages[i]+&quot; &quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int[] ages = &#123; 23, 45, 67, 12, 34, 56, 8, 34, 23, 3 &#125;;</span><br><span class="line">for(int i = 9; i&gt;=0; i--)</span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(ages[i]+&quot; &quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在我们不知道数组的长度时可以用ages.Length获取ages的长度。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">int</span>[] ages = &#123; <span class="number">23</span>, <span class="number">45</span>, <span class="number">67</span>, <span class="number">12</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">8</span>, <span class="number">34</span>, <span class="number">23</span>, <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;ages.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(ages[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">int[] ages = &#123; 23, 45, 67, 12, 34, 56, 8, 34, 23, 3 &#125;;</span><br><span class="line">int i = 0;</span><br><span class="line">while (i &lt; 10)</span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(ages[i]+&quot; &quot;);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line">```CSHARP倒序</span><br><span class="line">int[] ages = &#123; 23, 45, 67, 12, 34, 56, 8, 34, 23, 3 &#125;;</span><br><span class="line">int i = 9;</span><br><span class="line">while (i &gt;= 0)</span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(ages[i]+&quot; &quot;);</span><br><span class="line">    i--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h2><blockquote><p>在C#中，foreach 循环是一种简洁且高效的方式来遍历数组、集合或任何实现了 IEnumerable 或 IEnumerable<T>接口的对象。foreach 循环会自动处理迭代过程，你只需要关注每个元素的处理逻辑。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">int</span>[] ages = &#123; <span class="number">23</span>, <span class="number">45</span>, <span class="number">67</span>, <span class="number">12</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">8</span>, <span class="number">34</span>, <span class="number">23</span>, <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> age <span class="keyword">in</span> ages)</span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(age+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp基本数据类型—浮点型，类型转换学习笔记</title>
      <link href="/2024/11/27/csharp%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B2/"/>
      <url>/2024/11/27/csharp%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Csharp基本数据类型：浮点型"><a href="#Csharp基本数据类型：浮点型" class="headerlink" title="Csharp基本数据类型：浮点型"></a>Csharp基本数据类型：浮点型</h1><blockquote><p>浮点数值类型表示实数。 所有浮点型数值类型均为值类型。 它们还是简单类型，可以使用文本进行初始化。 所有浮点数值类型都支持算术、比较和相等运算符。</p></blockquote><h2 id="浮点类型的特征"><a href="#浮点类型的特征" class="headerlink" title="浮点类型的特征"></a>浮点类型的特征</h2><p><img src="/img%5Cfudianxing.png"></p><p>1.浮点数在计算机中是以IEEE 754标准来存储的，这意味着它们可以表示非常大或非常小的数，并且可以表示非整数。</p><p>2.以下是一些关于C#浮点型的重要点：</p><blockquote><p>浮点数的精度是有限的，因此在进行浮点数运算时可能会出现精度损失。<br>浮点数可以表示正数、负数和零。<br>浮点数也可以表示特殊值，如正无穷(double.PositiveInfinity)、负无穷(double.NegativeInfinity)和NaN（不是一个数字，double.NaN）。<br>在比较浮点数时，应该使用一定的容差来判断两个数是否“相等”，因为直接比较可能会因为精度问题导致不准确的结果。<br>浮点数的舍入模式可以通过Math.Round方法或者MidpointRounding枚举来控制。<br>使用浮点型时，需要考虑到这些特性和限制，以确保程序的正确性和健壮性。</p></blockquote><h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><p>1.在C#中，转义字符是一种特殊的字符序列，以反斜杠（\）开始，用来表示那些不能直接表示的字符或者具有特殊含义的字符。以下是一些常用的转义字符：</p><blockquote><p>1.换行符（\n）：插入一个新行。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(&quot;Hello,\nWorld!&quot;);</span><br></pre></td></tr></table></figure><blockquote><p>2.回车符（\r）：将光标移动到当前行的开头。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(&quot;Hello,\rWorld!&quot;);</span><br></pre></td></tr></table></figure><blockquote><p>3.制表符（\t）：插入一个水平制表符（Tab）。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(&quot;Hello,\tWorld!&quot;);</span><br></pre></td></tr></table></figure><blockquote><p>4.反斜杠（\）：表示一个实际的反斜杠字符。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string path = &quot;C:\\Program Files\\Example&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>5.单引号（&#39;）：表示一个单引号字符。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string text = &quot;He&#x27;s the one.&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>6.双引号（&quot;）：表示一个双引号字符。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string text = &quot;He said \&quot;Hello\&quot; to me.&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>7.问号（?）：表示一个问号字符。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string text = &quot;What&#x27;s this?&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>8.空字符（\0）：表示一个空字符（null character）。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string text = &quot;Hello\0World&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>9.Unicode转义序列（\uXXXX 或 \UXXXXXXXX）：表示一个Unicode字符，其中XXXX是四位十六进制数，XXXXXXXX是八位十六进制数。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string text = &quot;\u00A9&quot;; // © symbol</span><br><span class="line">string text = &quot;\U0001F600&quot;; // 😀 emoji</span><br></pre></td></tr></table></figure><blockquote><p>10.八进制转义序列（\XXX）：表示一个ASCII字符，其中XXX是三位八进制数。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string text = &quot;\7&quot;; // 表示ASCII码为7的字符，即BEL（响铃）字符</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp基本数据类型—整型学习笔记</title>
      <link href="/2024/11/26/csharp%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2024/11/26/csharp%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Csharp基本数据类型：整型"><a href="#Csharp基本数据类型：整型" class="headerlink" title="Csharp基本数据类型：整型"></a>Csharp基本数据类型：整型</h1><blockquote><p>整型数值类型 表示整数。 所有的整型数值类型均为值类型。 它们还是简单类型，可以使用文本进行初始化。 所有整型数值类型都支持算术、位逻辑、比较和相等运算符。</p></blockquote><p>1.C# 支持以下预定义整型类型：<br><img src="/img%5Czhengxing.png"></p><h2 id="在C-中，整数数据类型分为有符号和无符号两种，它们的主要区别在于值的范围和是否包含负数。"><a href="#在C-中，整数数据类型分为有符号和无符号两种，它们的主要区别在于值的范围和是否包含负数。" class="headerlink" title="在C#中，整数数据类型分为有符号和无符号两种，它们的主要区别在于值的范围和是否包含负数。"></a>在C#中，整数数据类型分为有符号和无符号两种，它们的主要区别在于值的范围和是否包含负数。</h2><p>1.有符号整数（Signed Integers）：</p><blockquote><p>可以表示正数、负数和零。<br>常见的有符号整数类型包括：<br>sbyte：8位有符号整数，范围从 -128 到 127。<br>short：16位有符号整数，范围从 -32,768 到 32,767。<br>int：32位有符号整数，范围从 -2,147,483,648 到 2,147,483,647。<br>long：64位有符号整数，范围从 -9,223,372,036,854,775,808 到 9,223,372,036,854,775,807。</p></blockquote><p>2.无符号整数（Unsigned Integers）：</p><blockquote><p>只能表示正数和零，不能表示负数。<br>常见的无符号整数类型包括：<br>byte：8位无符号整数，范围从 0 到 255。<br>ushort：16位无符号整数，范围从 0 到 65,535。<br>uint：32位无符号整数，范围从 0 到 4,294,967,295。<br>ulong：64位无符号整数，范围从 0 到 18,446,744,073,709,551,615。</p></blockquote><p>3.区别：</p><blockquote><p>值的范围：无符号整数类型的值范围从0开始，而有符号整数类型的值范围则包括负数。<br>内存占用：相同位数的有符号和无符号整数占用的内存大小是相同的，但是无符号整数可以表示更大的正数值。<br>溢出行为：当整数运算结果超出其类型所能表示的范围时，会发生溢出。有符号整数溢出时可能会变成一个负数，而无符号整数溢出时会从0开始循环。<br>默认值：有符号整数类型的默认值是0，而无符号整数类型的默认值也是0。<br>使用场景：有符号整数通常用于需要表示正负值的场景，而无符号整数通常用于计数器、索引、数组长度等只能取非负值的场景。<br>在实际编程中，选择使用有符号还是无符号整数类型，应根据具体的应用场景和需求来决定。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp循环嵌套九九乘法表、买鸡和最大公约数笔记</title>
      <link href="/2024/11/25/csharp%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
      <url>/2024/11/25/csharp%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97%E7%BC%96%E7%A8%8B%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Csharp编程题，九九乘法表和百文买鸡问题"><a href="#Csharp编程题，九九乘法表和百文买鸡问题" class="headerlink" title="Csharp编程题，九九乘法表和百文买鸡问题"></a>Csharp编程题，九九乘法表和百文买鸡问题</h1><p>1.使用嵌套循环写出九九乘法表<br>分析：</p><blockquote><p>1.选择for语句进行嵌套循环<br> 2.最外层循环9次，子循环递增到9次</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            console.Write(<span class="string">&quot;&#123;0&#125;*&#123;1&#125;=&#123;2&#125;&quot;</span>,j,i,i*j);</span><br><span class="line">        &#125;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p> 输出结果：<br> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> * <span class="number">1</span> = <span class="number">1</span></span><br><span class="line"><span class="number">1</span> * <span class="number">2</span> = <span class="number">2</span>   <span class="number">2</span> * <span class="number">2</span> = <span class="number">4</span></span><br><span class="line"><span class="number">1</span> * <span class="number">3</span> = <span class="number">3</span>   <span class="number">2</span> * <span class="number">3</span> = <span class="number">6</span>   <span class="number">3</span> * <span class="number">3</span> = <span class="number">9</span></span><br><span class="line"><span class="number">1</span> * <span class="number">4</span> = <span class="number">4</span>   <span class="number">2</span> * <span class="number">4</span> = <span class="number">8</span>   <span class="number">3</span> * <span class="number">4</span> = <span class="number">12</span>   <span class="number">4</span> * <span class="number">4</span> = <span class="number">16</span></span><br><span class="line"><span class="number">1</span> * <span class="number">5</span> = <span class="number">5</span>   <span class="number">2</span> * <span class="number">5</span> = <span class="number">10</span>   <span class="number">3</span> * <span class="number">5</span> = <span class="number">15</span>   <span class="number">4</span> * <span class="number">5</span> = <span class="number">20</span>   <span class="number">5</span> * <span class="number">5</span> = <span class="number">25</span></span><br><span class="line"><span class="number">1</span> * <span class="number">6</span> = <span class="number">6</span>   <span class="number">2</span> * <span class="number">6</span> = <span class="number">12</span>   <span class="number">3</span> * <span class="number">6</span> = <span class="number">18</span>   <span class="number">4</span> * <span class="number">6</span> = <span class="number">24</span>   <span class="number">5</span> * <span class="number">6</span> = <span class="number">30</span>   <span class="number">6</span> * <span class="number">6</span> = <span class="number">36</span></span><br><span class="line"><span class="number">1</span> * <span class="number">7</span> = <span class="number">7</span>   <span class="number">2</span> * <span class="number">7</span> = <span class="number">14</span>   <span class="number">3</span> * <span class="number">7</span> = <span class="number">21</span>   <span class="number">4</span> * <span class="number">7</span> = <span class="number">28</span>   <span class="number">5</span> * <span class="number">7</span> = <span class="number">35</span>   <span class="number">6</span> * <span class="number">7</span> = <span class="number">42</span>   <span class="number">7</span> * <span class="number">7</span> = <span class="number">49</span></span><br><span class="line"><span class="number">1</span> * <span class="number">8</span> = <span class="number">8</span>   <span class="number">2</span> * <span class="number">8</span> = <span class="number">16</span>   <span class="number">3</span> * <span class="number">8</span> = <span class="number">24</span>   <span class="number">4</span> * <span class="number">8</span> = <span class="number">32</span>   <span class="number">5</span> * <span class="number">8</span> = <span class="number">40</span>   <span class="number">6</span> * <span class="number">8</span> = <span class="number">48</span>   <span class="number">7</span> * <span class="number">8</span> = <span class="number">56</span>   <span class="number">8</span> * <span class="number">8</span> = <span class="number">64</span></span><br><span class="line"><span class="number">1</span> * <span class="number">9</span> = <span class="number">9</span>   <span class="number">2</span> * <span class="number">9</span> = <span class="number">18</span>   <span class="number">3</span> * <span class="number">9</span> = <span class="number">27</span>   <span class="number">4</span> * <span class="number">9</span> = <span class="number">36</span>   <span class="number">5</span> * <span class="number">9</span> = <span class="number">45</span>   <span class="number">6</span> * <span class="number">9</span> = <span class="number">54</span>   <span class="number">7</span> * <span class="number">9</span> = <span class="number">63</span>   <span class="number">8</span> * <span class="number">9</span> = <span class="number">72</span>   <span class="number">9</span> * <span class="number">9</span> = <span class="number">81</span></span><br></pre></td></tr></table></figure><br>2.用100文买一百只鸡，其中公鸡，母鸡，都必须要有，公鸡3文一只，母鸡5文一只，小鸡2文一只，请问公鸡、母鸡、小鸡要买多少只刚好凑齐100文。<br>1.要求：每种鸡都要有且有几种买法。<br>2.分析：</p><blockquote><p>通过三层循环来遍历所有可能的公鸡、母鸡和小鸡的组合，以找到满足条件的解决方案。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> roosters=<span class="number">1</span>;roosters&lt;=<span class="number">100</span>/<span class="number">3</span>;roosters++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> hen = <span class="number">1</span>; hen &lt;= <span class="number">100</span> / <span class="number">5</span>; hen++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> pullet=<span class="number">1</span>; pullet&lt;=<span class="number">100</span> / <span class="number">2</span>; pullet++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((roosters * <span class="number">3</span> + hen * <span class="number">5</span> + pullet * <span class="number">2</span>) == <span class="number">100</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;公鸡：&#123;0&#125;，母鸡：&#123;1&#125;，小鸡：&#123;2&#125;&quot;</span>,roosters,hen,pullet);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>3.输入两个整数num1和num2,输出这两个正整数num1和num2的最大公约数。<br>1.分析：</p><blockquote><p>1.什么是最大公约数:两个或多个 整数 共有 约数 中最大的一个。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> num1=Convert.ToInt32(Console.ReadLine());</span><br><span class="line">    <span class="built_in">int</span> num2=Convert.ToInt32(Console.ReadLine());</span><br><span class="line">    <span class="built_in">int</span> min = num1;</span><br><span class="line">    <span class="keyword">if</span>(num2 &lt; min)</span><br><span class="line">    &#123;</span><br><span class="line">        min = num2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = min; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num1 % i == <span class="number">0</span> &amp;&amp; num2 % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;最大公约数&quot;</span>+i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp循环嵌套基本用法学习笔记</title>
      <link href="/2024/11/25/csharp%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97/"/>
      <url>/2024/11/25/csharp%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97/</url>
      
        <content type="html"><![CDATA[<h1 id="1-循环嵌套的基本用法"><a href="#1-循环嵌套的基本用法" class="headerlink" title="1.循环嵌套的基本用法"></a>1.循环嵌套的基本用法</h1><blockquote><p>C# 中的循环嵌套是指在一个循环内部再包含另一个循环。这种结构通常用于处理多维数组或需要多级迭代的情况。以下是一些常见的循环嵌套示例，包括 for 循环和 foreach 循环的嵌套。</p></blockquote><p><font size="5">1.输入两个整数n和m,输出n行m列的*阵</font></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> n=Convert.ToInt32 (Console.ReadLine());</span><br><span class="line"><span class="built_in">int</span> m=Convert.ToInt32 (Console.ReadLine());</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><font size="5">输出结果：</font></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">*****</span><br><span class="line">*****</span><br><span class="line">*****</span><br><span class="line">*****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p><font size="5">2.输入整数n,输出n层的三角形</font></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> n=Convert.ToInt32 (Console.ReadLine());</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; n+<span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write (<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font size="5">输出结果：</font></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br><span class="line">******</span><br></pre></td></tr></table></figure><p><font size="5">3.输入整数n,输出n层的三角形的斜边。</font></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> n=Convert.ToInt32 (Console.ReadLine());</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; n + <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; i<span class="number">-1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font size="5">输出结果：</font></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line">*</span><br><span class="line"> *</span><br><span class="line">  *</span><br><span class="line">   *</span><br><span class="line">    *</span><br><span class="line">     *</span><br></pre></td></tr></table></figure><p><font size="5">4.如果我们要让它反过来呢？.输入整数n。</font></p><blockquote><p>1.前面的题我们都是从小到大开始遍历，而这次是从大到小遍历。<br>2.因为是从大到小第一个for循环初始化i&#x3D;n;i&gt;0;i–;</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> n=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i = n; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; i<span class="number">-1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.Write(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font size="5">输出结果：</font></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span></span><br><span class="line">     *</span><br><span class="line">    *</span><br><span class="line">   *</span><br><span class="line">  *</span><br><span class="line"> *</span><br><span class="line">*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp认识新的类Random学习笔记</title>
      <link href="/2024/11/25/%E8%AE%A4%E8%AF%86%E6%96%B0%E7%9A%84%E7%B1%BBRandom/"/>
      <url>/2024/11/25/%E8%AE%A4%E8%AF%86%E6%96%B0%E7%9A%84%E7%B1%BBRandom/</url>
      
        <content type="html"><![CDATA[<h1 id="Csharp简单认识Random类"><a href="#Csharp简单认识Random类" class="headerlink" title="Csharp简单认识Random类"></a>Csharp简单认识Random类</h1><p>1.定义</p><blockquote><p>表示伪随机数生成器，这是一种能够产生满足某些随机性统计要求的数字序列的算法。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Random</span></span><br></pre></td></tr></table></figure><p>2.示例：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    Random rd = <span class="keyword">new</span> Random();</span><br><span class="line">    Console.WriteLine(rd.Next(<span class="number">1</span>,<span class="number">10</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：<br>随机1到10；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="猜数字"><a href="#猜数字" class="headerlink" title="猜数字"></a>猜数字</h2><p>1.随机，循环，才对停止循环。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    Random rd = <span class="keyword">new</span> Random();</span><br><span class="line">    <span class="built_in">int</span> number=rd.Next(<span class="number">1</span>,<span class="number">101</span>);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> numberUser=Convert.ToInt32(Console.ReadLine());</span><br><span class="line">        <span class="keyword">if</span> (numberUser &gt; number)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;你猜大了&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(numberUser&lt;number)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;你猜小了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(numberUser==number)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;你猜对了&quot;</span>);   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p> 输出结果：(随机，结果不唯一)<br> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">20</span></span><br><span class="line">你猜大了</span><br><span class="line"><span class="number">50</span></span><br><span class="line">你猜大了</span><br><span class="line"><span class="number">10</span></span><br><span class="line">你猜对了</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp笔记各种循环编程题二。</title>
      <link href="/2024/11/24/csharp%E7%BC%96%E7%A8%8B%E9%A2%982/"/>
      <url>/2024/11/24/csharp%E7%BC%96%E7%A8%8B%E9%A2%982/</url>
      
        <content type="html"><![CDATA[<h1 id="1-编写一共程序，打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方等于该数本身。"><a href="#1-编写一共程序，打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方等于该数本身。" class="headerlink" title="1.编写一共程序，打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方等于该数本身。"></a>1.编写一共程序，打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方等于该数本身。</h1><p>1.要求：例如153&#x3D;1<em>1</em>1+5<em>5</em>5+3<em>3</em>3，所以153是“水仙花”。</p><p>2.输入153</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">100</span>; i &lt;= <span class="number">999</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> ge = i % <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">int</span> shi = (i / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">int</span> bai = i / <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == ge * ge * ge + shi * shi * shi + bai * bai * bai)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">370</span></span><br><span class="line"><span class="number">371</span></span><br><span class="line"><span class="number">407</span></span><br></pre></td></tr></table></figure><h1 id="随机一个未知的整数，去除这个整数各个位上的0，形成新的数，并输出。"><a href="#随机一个未知的整数，去除这个整数各个位上的0，形成新的数，并输出。" class="headerlink" title="随机一个未知的整数，去除这个整数各个位上的0，形成新的数，并输出。"></a>随机一个未知的整数，去除这个整数各个位上的0，形成新的数，并输出。</h1><p>1.要求：输入的数字n大于0，小于1000000。</p><p>2.输入2020</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a= Convert.ToInt32(Console.ReadLine()); <span class="comment">//2020</span></span><br><span class="line"><span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">int</span> cheng = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(a != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = a % <span class="number">10</span>;<span class="comment">//0 202 //2 20//0 2 //2</span></span><br><span class="line">    <span class="keyword">if</span>(i != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i *= cheng; <span class="comment">//2 //2</span></span><br><span class="line">        sum+= i;<span class="comment">//2 //2</span></span><br><span class="line">        cheng *= <span class="number">10</span>;<span class="comment">//20 //20</span></span><br><span class="line">    &#125;</span><br><span class="line">    a = a / <span class="number">10</span>; <span class="comment">//2 //2</span></span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(sum); <span class="comment">//22</span></span><br></pre></td></tr></table></figure><p>3.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">22</span></span><br></pre></td></tr></table></figure><h1 id="随机数入一个整数num-输出一个新的数，新数恰好与原数每一位上的数字相反（如果原数末尾有多个零，输出的新数高位不含0）"><a href="#随机数入一个整数num-输出一个新的数，新数恰好与原数每一位上的数字相反（如果原数末尾有多个零，输出的新数高位不含0）" class="headerlink" title="随机数入一个整数num,输出一个新的数，新数恰好与原数每一位上的数字相反（如果原数末尾有多个零，输出的新数高位不含0）"></a>随机数入一个整数num,输出一个新的数，新数恰好与原数每一位上的数字相反（如果原数末尾有多个零，输出的新数高位不含0）</h1><p>1.样例输入8736 输出6378<br>  样例输入2300 输出32</p><p>  2.输入8736</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> num=Convert.ToInt32(Console.ReadLine());<span class="comment">//8736</span></span><br><span class="line"><span class="built_in">bool</span> yudao = <span class="literal">false</span>; <span class="comment">//默认还没有遇到第一个非0</span></span><br><span class="line"><span class="keyword">while</span> (num!=<span class="number">0</span>) <span class="comment">//从第到高位遍历</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = num % <span class="number">10</span>; <span class="comment">//6 873</span></span><br><span class="line">    <span class="comment">//判断是否遇到了第一个非0数字</span></span><br><span class="line">    <span class="comment">//已经遇到了第一个非0数字</span></span><br><span class="line">    <span class="comment">//不需要去掉0了</span></span><br><span class="line">    <span class="comment">//还没有遇到第一个非0数字</span></span><br><span class="line">    <span class="comment">//去掉</span></span><br><span class="line">    <span class="keyword">if</span> (yudao == <span class="literal">false</span>)<span class="comment">//还没有遇到第一个非0数字</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i != <span class="number">0</span>)<span class="comment">//i=6</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.Write(i);</span><br><span class="line">            <span class="comment">//标志位，标志是否达到了某个条件</span></span><br><span class="line">            yudao= <span class="literal">true</span>;<span class="comment">//确定i!=0时，停止判断</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">else</span><span class="comment">//i=3</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.Write(i);</span><br><span class="line">        &#125;</span><br><span class="line">    num = num / <span class="number">10</span>;<span class="comment">//8736 873</span></span><br></pre></td></tr></table></figure><p>  3.输出结果<br>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6378</span></span><br></pre></td></tr></table></figure></p><h1 id="回文数和倒序读都是一样的整数。输入一个数，判断是否是回文数。输入的整数大于0，小于1000000。"><a href="#回文数和倒序读都是一样的整数。输入一个数，判断是否是回文数。输入的整数大于0，小于1000000。" class="headerlink" title="回文数和倒序读都是一样的整数。输入一个数，判断是否是回文数。输入的整数大于0，小于1000000。"></a>回文数和倒序读都是一样的整数。输入一个数，判断是否是回文数。输入的整数大于0，小于1000000。</h1><p>  1.要求：如果是回文输出yes，不是输出no。<br>  2.输入2397<br> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">int</span> n=Convert.ToInt32(Console.ReadLine());<span class="comment">//2992</span></span><br><span class="line"><span class="built_in">int</span> tempN = n;</span><br><span class="line"><span class="built_in">int</span> number = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (tempN != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = tempN % <span class="number">10</span>;<span class="comment">//2 299  //9 29 //9 2 //2</span></span><br><span class="line">    number *= <span class="number">10</span>;<span class="comment">//0*10=0 //20 //290 //2990</span></span><br><span class="line">    number += i;<span class="comment">//2 //29 //299 //2992</span></span><br><span class="line">    tempN = tempN / <span class="number">10</span>;<span class="comment">//299 //29 //2 //0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (number == n)</span><br><span class="line">&#123;</span><br><span class="line">   Console.WriteLine(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>3.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csharp笔记各种循环编程题一。</title>
      <link href="/2024/11/22/csharp%E7%BC%96%E7%A8%8B%E9%A2%981/"/>
      <url>/2024/11/22/csharp%E7%BC%96%E7%A8%8B%E9%A2%981/</url>
      
        <content type="html"><![CDATA[<h1 id="1-一个球从某一高度落下，每次落地后反跳回原来高度的一半，再落下。"><a href="#1-一个球从某一高度落下，每次落地后反跳回原来高度的一半，再落下。" class="headerlink" title="1.一个球从某一高度落下，每次落地后反跳回原来高度的一半，再落下。"></a>1.一个球从某一高度落下，每次落地后反跳回原来高度的一半，再落下。</h1><p>1.要求：球第十次反弹多高？在第十次落地时，共经过多少米？<br>2.要求：输入球的初始高度，输出反弹多高，和经过了多少米。</p><p>3.分析：</p><blockquote><p>1.我们可以用int n来确定球的从多高往下弹。<br>    2.再利用for循环来求出球体的第十次反弹多高和经过了多少米<br>    3.可以用double来定义high存储第十次的高，因为反弹是原来的一半，for的表达式：high&#x2F;&#x3D;2;。<br>    4.再用double来定义distance存储反弹的和，2*n来确定第一次谈的高，因为反弹是原来的一半<br>    第2个for的表达式：distance&#x2F;&#x3D;2;。</p></blockquote><p>4.输入100。</p> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> n=Convert.ToInt32 (Console.ReadLine());</span><br><span class="line"></span><br><span class="line"><span class="built_in">double</span> high = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    high /= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine (high);</span><br><span class="line"><span class="built_in">double</span> distance = <span class="number">2</span> * n;</span><br><span class="line"><span class="built_in">double</span> sum = n;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i= <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    distance /= <span class="number">2</span>;</span><br><span class="line">    sum += distance;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine (sum);</span><br></pre></td></tr></table></figure><p> 5.输出结果：<br> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">0.09765625</span></span><br><span class="line"><span class="number">299.609375</span></span><br></pre></td></tr></table></figure></p><h1 id="2-输入一个整数a，和一个正整数n，计算乘方a的次方"><a href="#2-输入一个整数a，和一个正整数n，计算乘方a的次方" class="headerlink" title="2.输入一个整数a，和一个正整数n，计算乘方a的次方"></a>2.输入一个整数a，和一个正整数n，计算乘方a的次方</h1><p>1.要求：使用循环来计算a的次方。</p><p>2.分析：</p><blockquote><p>1.用int a和n。在double来定义一个变量sum来存储a的次方，再利用for循环来判断次方大小。for循环表达式：sum*&#x3D;n;</p></blockquote><p>3.输入a&#x3D;5,n&#x3D;5</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;           </span><br><span class="line">    <span class="built_in">int</span> a = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">    <span class="built_in">int</span> n = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">    <span class="built_in">double</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum *= n;</span><br><span class="line">    &#125;</span><br><span class="line">    Console.WriteLine(sum);</span><br></pre></td></tr></table></figure><p>4.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3125</span></span><br></pre></td></tr></table></figure><h1 id="3-我国现有x亿人口，按每年0-1-的增长速度，n年后将有多少人？"><a href="#3-我国现有x亿人口，按每年0-1-的增长速度，n年后将有多少人？" class="headerlink" title="3.我国现有x亿人口，按每年0.1%的增长速度，n年后将有多少人？"></a>3.我国现有x亿人口，按每年0.1%的增长速度，n年后将有多少人？</h1><p>1.要求：使用循环求n年后有多少人。</p><p>2.分析：</p><blockquote><p>1.人口是用数字统计，我们可用double定义一个值，在int nian定义过了多少年。<br>2.用for循环，表达式：rankou*&#x3D;1.001;</p></blockquote><p>3.输入rankou&#x3D;120000,nian&#x3D;12</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line"><span class="built_in">double</span> rankou = Convert.ToInt32(Console.ReadLine());</span><br><span class="line"> <span class="built_in">int</span> nian = Convert.ToInt32(Console.ReadLine());</span><br><span class="line"> <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; nian; i++)</span><br><span class="line"> &#123;</span><br><span class="line">     rankou *= <span class="number">1.001</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> Console.WriteLine(rankou);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p> 4.输出结果：<br> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">121447.94645949498</span></span><br></pre></td></tr></table></figure></p><h1 id="投资，已知投资的复合利率为R-0到20之间的整数-。投M钱（100到1000000之间的整数）。投资Y年（范围0到400）。"><a href="#投资，已知投资的复合利率为R-0到20之间的整数-。投M钱（100到1000000之间的整数）。投资Y年（范围0到400）。" class="headerlink" title="投资，已知投资的复合利率为R(0到20之间的整数)。投M钱（100到1000000之间的整数）。投资Y年（范围0到400）。"></a>投资，已知投资的复合利率为R(0到20之间的整数)。投M钱（100到1000000之间的整数）。投资Y年（范围0到400）。</h1><p> 1.要求：投资共赚多少钱？</p><p> 2.分析：</p><blockquote><p>1.复合利率给我们的范围是0到20之间，我就取10好了，复合利率是10除100就是它的复合利率。<br>2.用double来第一变量R、M、Y,和sum来存储答案。</p></blockquote><p>3.输入R&#x3D;10，M&#x3D;50000，Y&#x3D;20</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="built_in">double</span> R=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"><span class="built_in">double</span> M=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"><span class="built_in">double</span> Y=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"><span class="built_in">double</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i =<span class="number">0</span>;i&lt;Y;i++)</span><br><span class="line">&#123;</span><br><span class="line">    M *= (R / <span class="number">100.0</span>) + <span class="number">1</span>;</span><br><span class="line">    sum += M;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.输出结果：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3150124.972129084</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程题：用循环做出挖掘数字并计算和（笔记）</title>
      <link href="/2024/11/20/csharp%E5%AD%97%E7%AC%A6%E8%AF%BB%E5%8F%96/"/>
      <url>/2024/11/20/csharp%E5%AD%97%E7%AC%A6%E8%AF%BB%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h1 id="1-挖掘数字，并并计算这些数字的和"><a href="#1-挖掘数字，并并计算这些数字的和" class="headerlink" title="1.挖掘数字，并并计算这些数字的和"></a><font size="8"><b>1.挖掘数字，并并计算这些数字的和</font></b></h1><blockquote><p>知识点：<br>1.如何读取一个字符输入<br>2.输入缓冲区<br>3.break跳出循环</p></blockquote><p><font size="5"><b>1.数字和字符混合在一起了，作为一个优秀的挖掘人员，把输入的数字挖出来并计算这些数字的和，并输出。输入以@作为结束。 样例输入23a34b34@  样例输出19</p><blockquote><p>只学到循环如何做出这道难题</fotn></b></p></blockquote><p><font size="5"><b>2.分析：</fotn></b></p><blockquote><p>1.这题我们可以用ASCII码来做，用char输出字符。<br>2。用if来判断是否是数字。<br>在int定义一个变量来存储和</p></blockquote><p><font size="5">3.输入值：234SKHF23@</fotn></b></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">char</span> c;</span><br><span class="line"><span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    c = (<span class="built_in">char</span>)Console.Read();</span><br><span class="line">    <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> number = c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        sum += number;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (c != <span class="string">&#x27;@&#x27;</span>);</span><br><span class="line">Console.WriteLine(sum);</span><br></pre></td></tr></table></figure><p><font size="5">4.输出结果：</fotn></b></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">234</span>SKHF23@</span><br><span class="line"><span class="number">14</span></span><br></pre></td></tr></table></figure><h1 id="什么是缓冲区"><a href="#什么是缓冲区" class="headerlink" title="什么是缓冲区"></a><font size="8"><b>什么是缓冲区</font></b></h1><blockquote><p>在C#中，缓冲区通常指的是一块内存区域，用于临时存储数据。缓冲区在处理I&#x2F;O操作（如文件读写、网络通信等）时非常有用，因为它们可以减少实际的I&#x2F;O操作次数，提高性能。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Csharp </tag>
            
            <tag> Visual Studio 2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量的作用域</title>
      <link href="/2024/11/19/%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
      <url>/2024/11/19/%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="C-变量里的作用域"><a href="#C-变量里的作用域" class="headerlink" title="C#变量里的作用域"></a><font size="8">C#变量里的作用域</font></b></h1><p><font size="6">一.什么是作用域</font></b></p><blockquote><p>作用域（Scope）是编程中的一个基本概念，它定义了代码中变量、函数、类等实体的可见性和生命周期。作用域决定了在程序的哪些部分可以访问或修改这些实体。</p></blockquote><p><font size="6">二.C#变量作用域中一些关键点</font></b></p><p>1.局部作用域是指在编程中，变量或函数仅在定义它们的特定代码块或区域内可见和可访问的作用域。这种作用域通常与局部变量和局部函数相关联，它们只在创建它们的函数、方法或代码块内部有效。以下是局部作用域的一些关键特点：</p><p>定义位置：局部变量或函数通常在函数、方法或代码块内部定义。</p><p>可见性：局部变量或函数只在定义它们的函数、方法或代码块内部可见。一旦代码执行离开了这个区域，局部变量或函数就不再可访问。</p><p>生命周期：局部变量的生命周期通常与定义它们的函数或代码块的执行周期相同。当函数或代码块执行结束时，局部变量会被销毁，占用的内存会被释放。</p><p>初始化：在某些编程语言中，局部变量在使用前必须被初始化，否则可能会引发错误或警告。</p><p>同名变量：在不同的函数或代码块中可以定义同名的局部变量，它们是独立的，互不影响。</p><p>参数传递：当函数或方法被调用时，实参的值会被复制到对应的局部变量（形参）中，局部变量的修改不会影响实参的值，除非使用了引用传递或指针。</p><p>作用域链：在支持闭包的语言中，局部变量可以被嵌套函数访问，形成作用域链。</p><p>重用性：局部变量的名称可以在不同的函数或代码块中重复使用，因为它们的作用域是独立的。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Main方法开始执行&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 定义一个局部变量</span></span><br><span class="line">            <span class="built_in">int</span> localVar = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// localVar仅在这个代码块内部可见</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;局部变量的值: &quot;</span> + localVar);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在这个点，localVar不再存在，因为它的作用域已经结束</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.在C#中，全局作用域的概念与传统的全局变量有所不同。C#是一种面向对象的编程语言，它鼓励封装和模块化，因此并不直接支持传统意义上的全局变量。然而，可以通过以下几种方式来实现全局可访问的数据：</p><blockquote><p>静态成员变量和静态属性：<br>在C#中，可以通过静态类和静态成员来模拟全局变量的效果。静态成员属于类本身，而不是类的任何特定实例。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">csharp</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Global</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> GlobalValue = <span class="number">42</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在程序的任何地方都可以这样访问</span></span><br><span class="line"><span class="built_in">int</span> <span class="keyword">value</span> = Global.GlobalValue;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>for语句学习笔记</title>
      <link href="/2024/11/12/for%E8%AF%AD%E5%8F%A5/"/>
      <url>/2024/11/12/for%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="for循环笔记"><a href="#for循环笔记" class="headerlink" title="for循环笔记"></a><font size="8"></b>for循环笔记</font></b></h1><blockquote><p>for循环输出执行循环次数<br>for(初始化；条件表达式；增量表达式)<br>{  &#x2F;&#x2F;循环体<br>}</p></blockquote><p><b><font size="5">1.fot循环的基本结构</font></b></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b><font size="5">2.fot语句的元素</font></b></p><blockquote><p>“初始化表达式”部分仅在进入循环前执行一次。 通常，在该部分中声明并初始化局部循环变量。 不能从 for 语句外部访问声明的变量。</p></blockquote><p>上例中的“初始化表达式”部分声明并初始化整数计数器变量：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> i = <span class="number">0</span></span><br></pre></td></tr></table></figure><blockquote><p>“条件”部分确定是否应执行循环中的下一个迭代。 如果计算结果为 true 或不存在，则执行下一个迭代；否则退出循环。 “条件”部分必须为布尔表达式。</p></blockquote><p>上例中的“条件”条件部分检查计数器值是否小于 10：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i&lt;<span class="number">10</span></span><br></pre></td></tr></table></figure><blockquote><p>“迭代器”部分定义循环主体的每次执行后将执行的操作。</p></blockquote><p>上例中的“迭代器”部分增加计数器：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i++</span><br></pre></td></tr></table></figure><blockquote><p>循环体，必须是一个语句或一个语句块。</p></blockquote><h2 id="用for循环进行简单的计算"><a href="#用for循环进行简单的计算" class="headerlink" title="用for循环进行简单的计算"></a><font size="7">用for循环进行简单的计算</font></h2><p><font size="5"><b>1.进行计算整数1-100的和<font></b></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>;i&lt;<span class="number">101</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    sum += i; </span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(sum);</span><br><span class="line">                          </span><br></pre></td></tr></table></figure><p><font size="5"></b>2.求1-100的偶数</font></b></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>;i&lt;<span class="number">101</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font size="5"><b>3.输入俩个整数n和m，计算n和m（包括n和m)所有能被17整除的数的和，并输出和。</font></b> </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> n=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"><span class="built_in">int</span> m=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"><span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">int</span> i = n; i &lt;= m; i++)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="keyword">if</span> (i % <span class="number">17</span> == <span class="number">0</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         sum += i;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> Console.WriteLine(sum);</span><br></pre></td></tr></table></figure><p> <font size="5"><b>4.输入俩个整数n和m，利用for循环打印出n和m之间（包含n和m），所用的奇数和所用的偶数。<br> 奇数放一行，用空格分割。偶数放一行，用空格分割。</font></b></p><blockquote><p>应为要同时输出奇数和偶数，我们可以先定义俩个字符串(string)进行存储。<br> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">int</span> n=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"><span class="built_in">int</span> m=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"><span class="built_in">string</span> oddNumbers = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> numbered = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">int</span> i = n; i &lt;= m; i++)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         oddNumbers += i+<span class="string">&quot; &quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">         numbered += i+<span class="string">&quot; &quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> Console.WriteLine(oddNumbers);</span><br><span class="line"> Console.WriteLine(numbered);</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a><font size="8"><b>break语句</font></b></h2><blockquote><p>break 语句：将终止最接近的封闭迭代语句（即 for、foreach、while 或 do 循环）或 switch 语句。 break 语句将控制权转交给已终止语句后面的语句</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> ( ; ; )</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine( i );</span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>while循环语句</title>
      <link href="/2024/11/10/while%E8%AF%AD%E5%8F%A5/"/>
      <url>/2024/11/10/while%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="while循环语句"><a href="#while循环语句" class="headerlink" title="while循环语句"></a><font size="8"></b>while循环语句</font></b></h1><blockquote><p>在指定的布尔表达式的计算结果为 true 时，while 语句会执行一条语句或一个语句块。 由于在每次执行循环之前都会计算此表达式，所以 while 循环会执行零次或多次。</p></blockquote><h2 id="while语句基本结构"><a href="#while语句基本结构" class="headerlink" title="while语句基本结构"></a><font size="5"><b>while语句基本结构</font></b></h2><p><img src="/img%5Cyouxin%5Cwhile1.png"><br><b>1.while语句基本用法</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">int x = 1;</span><br><span class="line">while (x&lt;10)    //条件判断</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(x);</span><br><span class="line">    x++;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(&quot;x&gt;10&quot;);   //条件不满足，执行代码</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="while循环求和"><a href="#while循环求和" class="headerlink" title="while循环求和"></a><font size="5"><b>while循环求和</font></b></h2><p><b>1.控制循环次数？循环1-100。</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int x=1;</span><br><span class="line">while(x&lt;100)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(x);</span><br><span class="line">    x++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>2.用while就1-100的整数和</b><br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> //第一种方式//局限性、固定的循环次数</span><br><span class="line"> int a = 1;</span><br><span class="line">int sum = 0;    //存放和</span><br><span class="line">while (a &lt; 101)</span><br><span class="line">&#123;</span><br><span class="line">    sum += a;  //sun=sum+a</span><br><span class="line">    a++;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(sum);</span><br><span class="line"></span><br><span class="line">//第二种方式//可以设置你像输出的循环次数</span><br><span class="line"> int n=Convert.ToInt32(Console.ReadLine());</span><br><span class="line"> int a = 1;</span><br><span class="line"> int sum = 0;</span><br><span class="line"> while (a &lt; n+1)</span><br><span class="line"> &#123;</span><br><span class="line">     sum += a;</span><br><span class="line">     a++;</span><br><span class="line"> &#125;</span><br><span class="line"> Console.WriteLine(sum);</span><br></pre></td></tr></table></figure><br><b>3.输出1-100的偶数</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int n = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">int a = 1;</span><br><span class="line">while (a &lt; n+1)</span><br><span class="line">&#123;</span><br><span class="line">    if (a % 2 == 0)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(a);</span><br><span class="line">    &#125;</span><br><span class="line">    a++;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><b>4.输入俩个整数n1,n2,输出n1-n2之间所有的偶数</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int n1=Convert.ToInt32(Console.ReadLine());</span><br><span class="line">int n2=Convert.ToInt32(Console.ReadLine());</span><br><span class="line">while (n1 &lt; n2 + 1)</span><br><span class="line">&#123;</span><br><span class="line">    if (n1 % 2 == 0)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(n1);</span><br><span class="line">    &#125;</span><br><span class="line">    n1++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b>5.3n+1:对于任意大于1的自然数n，若n为奇数，将n编程3n+1，否则变成n的一半。经过若干次这样的变化，n一定会最终变成1，比如，7→22→11→34→17→52→26→13→40→20→10→5→16→8→4→2→1<br>输入n，输出变化次数。</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">int num = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">int a = 0;</span><br><span class="line">while (num != 1)</span><br><span class="line">&#123;</span><br><span class="line">    if (num % 2 == 1)</span><br><span class="line">    &#123;</span><br><span class="line">        num = 3 * num + 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        num /= 2;</span><br><span class="line">    &#125;</span><br><span class="line">    a++;</span><br><span class="line">    Console.WriteLine(&quot;变换后的值&quot;+num);</span><br><span class="line">&#125; Console.WriteLine(&quot;变换的次数&quot;+a);</span><br></pre></td></tr></table></figure><h1 id="do-while循环学习笔记"><a href="#do-while循环学习笔记" class="headerlink" title="do-while循环学习笔记"></a><font size="8"><b>do-while循环学习笔记</font></b></h1><h2 id="do-while的基本结构"><a href="#do-while的基本结构" class="headerlink" title="do-while的基本结构"></a><font size="6"><b>do-while的基本结构</font></b></h2><blockquote><p>在指定的布尔表达式的计算结果为 true 时，do 语句会执行一条语句或一个语句块。 由于在每次执行循环之后都会计算此表达式，所以 do 循环会执行一次或多次。 do 循环不同于 while 循环（该循环执行零次或多次）。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(n);</span><br><span class="line">    n++;</span><br><span class="line">&#125; <span class="keyword">while</span> (n &lt; <span class="number">5</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
          <category> Visual Studio 2022 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安装AE插件</title>
      <link href="/2024/11/06/%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/"/>
      <url>/2024/11/06/%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="AE插件的安装"><a href="#AE插件的安装" class="headerlink" title="AE插件的安装"></a><font size="8">AE插件的安装</font></h1><blockquote><p>学剪辑想要有电影那样的好看特效就少不了插件的帮助，这期教大家下载插件</p></blockquote><h2 id="插件在哪下载呢？"><a href="#插件在哪下载呢？" class="headerlink" title="插件在哪下载呢？"></a><font size="6">插件在哪下载呢？</font></h2><p><font size="4"><b>1.还是有很多人不知道插件在哪下载，有很多人在b站搜AE插件安装，基本都是都是加微信，交钱进群啥的！浪费时间和钱插件还没拿到。</font></b></p><blockquote><p>这里我分享最全的下插件网站：<a href="https://www.lookae.com/">https://www.lookae.com/</a></p></blockquote><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a><font size="6">安装步骤</font></h2><p><font size="4"><b>1.打开looke.ae这个网站，在搜索框中输入你要安装的插件，博主就用<font color="red">Magic Bullet Suite v2023.2.1（红巨人）</font>这个插件来教大家安装：</font></b></p><blockquote><p>这个也是做剪辑常用的调色插件</p></blockquote><p><font size="4"><b>2.第一步，找到要下载的插件并看它是否支持你的AE的版本，选择下载方式。</font></b></p><blockquote><p>下面中文汉化是需要付费的且更新没有英文的快（推荐英文版）</p></blockquote><p><img src="/img%5Cyouxin%5CMan.png"><br><font size="4"><b>3.将我们下载的文件进行解压（推荐Bandizip这个解压软件，电脑自带的微软商店就可以下载到.）</font></b><br><img src="/img%5Cyouxin%5CMan1.png"></p><h2 id="按照步骤即可"><a href="#按照步骤即可" class="headerlink" title="按照步骤即可"></a>按照步骤即可</h2><p><font size="4"><b>4. 1..Maxon_App_2023.2.2_Win.exe，不要登录，安装完成之后关闭即可<br>2.安装Magic Bullet Suite Installer.exe，安装完成之后关闭即可<br>3.安装Unlocker 2023.2.1.exe，即可完成激活。</font></b></p>]]></content>
      
      
      <categories>
          
          <category> AE </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>素材补帧、4k</title>
      <link href="/2024/11/04/%E7%B4%A0%E6%9D%90%E8%A1%A5%E5%B8%A7%EF%BC%8C4k/"/>
      <url>/2024/11/04/%E7%B4%A0%E6%9D%90%E8%A1%A5%E5%B8%A7%EF%BC%8C4k/</url>
      
        <content type="html"><![CDATA[<h1 id="给素材补帧让视频变得丝滑"><a href="#给素材补帧让视频变得丝滑" class="headerlink" title="给素材补帧让视频变得丝滑"></a>给素材补帧让视频变得丝滑</h1><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><blockquote><p>给视频补帧，先给视频进行抽帧在补帧效果更好，下面是操作步骤：</p></blockquote><p>1.将视频导入AE,抽帧就是以你要补帧的人物（主体）为第一要素，第一要素动了就裁剪一次：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;border-radius: 12px">    <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113429784298208&bvid=BV1uTDhYTEBV&cid=26627605593&p=1" page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 80%; width: 100%;border-radius: 12px"> </iframe></div>2.将视频用Me导出来（也是looked.ae下载），在进行补帧。<blockquote><p>1.我在这里分享两个好用的补帧软件，让你的视频丝滑无比。</p></blockquote><h2 id="第一个：Flowframes"><a href="#第一个：Flowframes" class="headerlink" title="第一个：Flowframes"></a>第一个：<font color="blue">Flowframes</font></h2><p>2.第一步打开flow,如图：↓<br><img src="/img%5Cflow.png"><br>3.点击Browse(Video)，选择要补帧的片段，在选择你要补的帧数按interpolate开始补帧。</p><h2 id="第二个：SVFI"><a href="#第二个：SVFI" class="headerlink" title="第二个：SVFI"></a>第二个：<font color="blue">SVFI</font></h2><p>1.这个补帧软件是我用过最好的，唯一的缺点就是要钱但只补帧的话只需买社区服43元（steam上面购买），这个软件还可以补4K、8k、超分。（但要买专业版328）<br>我这有平替，他就是：<font size="5">VideoAIportable</font></p><h2 id="第二个：SVFI-1"><a href="#第二个：SVFI-1" class="headerlink" title="第二个：SVFI"></a>第二个：<font color="blue">SVFI</font></h2><p>1.这个补帧软件是我用过最好的，唯一的缺点就是要钱但只补帧的话只需买社区服43元（steam上面购买），这个软件还可以补4K、8k、超分。（但要买专业版328）<br>我这有平替，他就是：<font size="5">Topaz VideoAIportable</font></p><p>2.先用SVFI进行补帧。打开SVFI的高级设置先进行调试，可以参考我的来：<br>一.<img src="/img%5Cyouxin%5Csvfi.png"><br>二.<img src="/img%5Cyouxin%5Csvfi1.png"><br>三.<img src="/img%5Cyouxin%5Csvfi2.png"><br>四.<img src="/img%5Cyouxin%5Csvfi3.png"></p><h2 id="视频补4K"><a href="#视频补4K" class="headerlink" title="视频补4K"></a>视频补4K</h2><p>没有 <font size="4">Topaz VideoAIportable</font> 的在looke.ae也可以下载的。</p><p>1.打开<font size="4">Topaz VideoAIportable</font>导入素材可以按照我这样设置：<br><img src="/img%5Cyouxin%5CTopaz.png"><br><font size="4">请看对比</font></p><p><img src="/img%5Cyouxin%5CTopaz1.png"><br>2.导出即可</p>]]></content>
      
      
      <categories>
          
          <category> AE </category>
          
          <category> SVFI </category>
          
          <category> Topaz VideoAIportable </category>
          
          <category> Flowframes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AE素材获取</title>
      <link href="/2024/10/30/AE%E7%B4%A0%E6%9D%90%E6%8F%90%E7%BA%AF/"/>
      <url>/2024/10/30/AE%E7%B4%A0%E6%9D%90%E6%8F%90%E7%BA%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="学习漫剪第一步：获取素材"><a href="#学习漫剪第一步：获取素材" class="headerlink" title="学习漫剪第一步：获取素材"></a><b>学习漫剪第一步：获取素材</b></h1><blockquote><p>我们下好软件之和就是去寻找素材，很多人都不知道或是用录频软件去录制带字幕的视频，这里我分享资源多可以下载生肉的网站。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mikanime.tv/</span><br></pre></td></tr></table></figure><p>1.这个网站只能下载种子到迅雷把视频下载下来。</p><blockquote><p>看到这就有人问博主博主网上不是有很多免费bit下载软件，博主为啥还是推荐迅雷呢？<br>因为迅雷不充钱也比这些免费bit下载速度快。</p></blockquote><p>2.下面是图片描述：<br><img src="/img/mingan.png" alt="图片描述"><br>3.然后搜索你要下载的动漫种子，点击种子自动跳转迅雷下载所选择的盘。<br><img src="/img/mangan1.png" alt="图片描述"><br>4.<b>博主前期出一些操作简单，内容不会很多且好理解的教程。</b></p>]]></content>
      
      
      <categories>
          
          <category> AE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蜜柑计划 </tag>
            
            <tag> 迅雷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常</title>
      <link href="/2024/10/30/YOUXIANDEYU/"/>
      <url>/2024/10/30/YOUXIANDEYU/</url>
      
        <content type="html"><![CDATA[<h1 id="博主的随心日常"><a href="#博主的随心日常" class="headerlink" title="博主的随心日常"></a></b><em>博主的随心日常</em></b></h1><h2 id="2024年"><a href="#2024年" class="headerlink" title="2024年"></a>2024年</h2><h3 id="11月1日"><a href="#11月1日" class="headerlink" title="11月1日"></a>11月1日</h3><!-- <div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;border-radius: 12px">    <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113316101884629&bvid=BV1TRmAYSE94&cid=26314608616&p=1" page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 80%; width: 100%;border-radius: 12px"> </iframe></div> --><blockquote><p>今天明日方舟更新5.5周年了（有没有和博主玩一样的游戏啊），攒了70抽开开心心上线抽卡，出了俩个金，歪了个叔叔潜能+1。给我出个没有的都好啊！<br>说说我对这游戏的评价吧，21年那会儿我是被同学带入坑的那时第一次接触这种类型的游戏感觉很好玩很新颖，后面也玩过很多这种类型的二游但还是明日方舟更好，尽管现在不怎么玩了。<br>可能是新鲜感过了吧。关卡出的没意思，抽卡一直是非酋。如今每天上线就是刷体力完成每日就下了。<br>现在唯一好玩的的就是它出的危机合约了。🥱🥱🥱</p></blockquote><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;border-radius: 12px"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113407286052207&bvid=BV1NgSRYbEAQ&cid=26564363331&p=1" page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 80%; width: 100%;border-radius: 12px"> </iframe></div><blockquote><p>新出的塑心皮肤还是很好看的。喜欢😍😍😍</p></blockquote><p><img src="/img/youxin/%E5%A1%91%E5%BF%83.jpg"><br><img src="/img/youxin/%E5%A1%91%E5%BF%831.jpg"></p><h3 id="11月3日"><a href="#11月3日" class="headerlink" title="11月3日"></a>11月3日</h3><blockquote><p>看完CS,2024BLAST全球总决赛。<br>恭喜G2夺冠</p></blockquote><p><img src="/img/youxin/G2.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C# if、swatch学习笔记</title>
      <link href="/2024/10/30/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
      <url>/2024/10/30/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本人是一名初学者，欢迎各位大佬指正。<br>记录自己学习c#过程中的心得体会。</p></blockquote><p><font size="6"> C# if、switch的基本关系与使用 </font><br></p><blockquote><p>1.if语句有两种表达方式，第1种是包含 else 部分的 if 语句根据布尔表达式的值选择两个语句中的一个来执行，如以下示例所示：</p></blockquote><figure class="highlight c#"><figcaption><span>if else...</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">int</span> number=Convert.ToInt32(Console.ReadLine()); <span class="comment">//定义一个整数</span></span><br><span class="line">           <span class="keyword">if</span> (number &gt;= <span class="number">0</span>)  <span class="comment">//条件</span></span><br><span class="line">           &#123;</span><br><span class="line">                  Console.WriteLine(<span class="string">&quot;博主好帅&quot;</span>); <span class="comment">// 满足条件输出</span></span><br><span class="line">            &#125;</span><br><span class="line">             <span class="keyword">else</span>  </span><br><span class="line">             &#123;</span><br><span class="line">                  Console.WriteLine(<span class="string">&quot;博主最帅&quot;</span>); <span class="comment">//不满足条件输出</span></span><br><span class="line">              &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>2.第二种是else嵌套if语句可以判断多个条件：</p></blockquote><figure class="highlight c#"><figcaption><span>else-if...</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> number=Convert.ToInt32(Console.ReadLine());  <span class="comment">//定义一个整数</span></span><br><span class="line">            <span class="keyword">if</span> (number == <span class="number">0</span>)  <span class="comment">//条件1</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;YOU&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (number &gt; <span class="number">0</span>)  <span class="comment">//条件2</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;XIAN&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (number &lt; <span class="number">0</span>)  <span class="comment">//条件3</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;YU&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (number != <span class="number">0</span>)  <span class="comment">//条件4</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;YOUXIANYU&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;XX&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>3.switch语句是根据与匹配表达式匹配的模式来选择要执行的语句列表，如以下示例所示：</p></blockquote><figure class="highlight c#"><figcaption><span>输入4个整数，判断最大值和最小值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Schema;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">switch</span>语句2</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">int</span> a = Convert.ToInt32(Console.ReadLine());  <span class="comment">//定义一个整数</span></span><br><span class="line">            <span class="built_in">int</span> b = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">            <span class="built_in">int</span> c = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">            <span class="built_in">int</span> d = Convert.ToInt32(Console.ReadLine());</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> max = a, min = a;  <span class="comment">//赋值</span></span><br><span class="line">            <span class="keyword">if</span> (max &lt; b)  </span><br><span class="line">            &#123;</span><br><span class="line">                max = b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (max &lt; c)</span><br><span class="line">            &#123;</span><br><span class="line">                max = c;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (max &lt; d)</span><br><span class="line">            &#123;</span><br><span class="line">                max = d;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (min &gt; b)</span><br><span class="line">            &#123;</span><br><span class="line">                min = b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (min &gt; c)</span><br><span class="line">            &#123;</span><br><span class="line">                min = c;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (min &gt; d)</span><br><span class="line">            &#123;</span><br><span class="line">                min = d;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;最大的值&#123;0&#125;，最小的值&#123;1&#125;.&quot;</span>, max, min);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">  </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Csharp </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何安装Adobe AfterEffects 2022</title>
      <link href="/2024/10/29/%E6%BC%AB%E5%89%AA/"/>
      <url>/2024/10/29/%E6%BC%AB%E5%89%AA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是我第一次写博客,就写一个自己热爱的漫剪。<br>1.所以就从安装Adobe AfterEffects 2022开始，分享一下软件的安装教程吧！<br>后续还会有更多的教程分享！</p></blockquote><h1 id="Adobe-AfterEffects-2022-安装教程"><a href="#Adobe-AfterEffects-2022-安装教程" class="headerlink" title="Adobe AfterEffects 2022 安装教程"></a><em><strong>Adobe AfterEffects 2022 安装教程</strong></em></h1><h2 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1.下载安装包"></a>1.下载安装包</h2><blockquote><p>2.首先，你需要到Adobe官网下载安装包，地址为：</p></blockquote><p> <a href="https://www.adobe.com/products/aftereffects.html">https://www.adobe.com/products/aftereffects.html</a></p><blockquote><p>哈哈，上面是正版Adobe软件，主要是给公司、和团队使用（如果不使用正版懂得懂得😜😜😜）<br>个人使用就用汉化版的就行啦↓<br><a href="https://www.rjctx.com/">https://www.rjctx.com/</a> </p></blockquote><p> 1.第一步进入网站，在搜索框里输入<b>Adobe After Efects</b>, 选择你喜欢的版本下载。</p><blockquote><p><b>温馨提示：版本上的不同软件上会有一定上的区别，还有就是后续的教学会使用到插件如果版本太高或太低就会出现插件上我有的效果你没有和效果不一样。</p></blockquote><p><img src="https://s2.loli.net/2024/10/31/WboNGvH9trF7xnQ.png" alt="AE.png"></p><p>2.随便选一个你喜欢的方式下载：<br>    <img src="https://s2.loli.net/2024/10/31/xFQiIahM61ly2SC.png" alt="AE.png"></p><blockquote><p><b>温馨提示2：下好的安装包可以放在除C盘的任意盘中但安装路径默认C盘就行，了解过AE的都知道经常会崩溃放在C盘会减少这种事情的发生（电脑好就不必理会）</b></p></blockquote><p>3.等它安装好就可以使用啦！！！😊😊😊</p>]]></content>
      
      
      <categories>
          
          <category> AE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Adobe After Effects 2022 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
